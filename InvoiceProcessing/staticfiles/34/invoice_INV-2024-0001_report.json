{
    "successful": false,
    "summary": "Validation failed. Check individual validation reports for details",
    "filename": "invoice_INV-2024-0001.xml",
    "reports": {
        "AUNZ_PEPPOL_1_0_10": {
            "rules": "AUNZ_PEPPOL_1_0_10",
            "successful": false,
            "summary": "Validation result for AUNZ_PEPPOL_1_0_10: Failed. Failed assertions count = 11. Assertion errors: { PEPPOL-EN16931-R008, PEPPOL-EN16931-R008, PEPPOL-EN16931-R008, PEPPOL-EN16931-R007, PEPPOL-EN16931-R004-AUNZ, PEPPOL-EN16931-R053, PEPPOL-EN16931-R054, PEPPOL-EN16931-R020, PEPPOL-EN16931-R010, PEPPOL-EN16931-R120, PEPPOL-EN16931-R130 }. Schematron Reports fired: no schematron reports fired. ",
            "firedAssertionErrors": [
                {
                    "id": "PEPPOL-EN16931-R008",
                    "text": "Document MUST not contain empty elements.",
                    "location": "/*:Invoice[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:Invoice-2'][1]/*:AccountingSupplierParty[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2'][1]/*:Party[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2'][1]/*:PostalAddress[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2'][1]/*:BuildingNumber[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2'][1]",
                    "test": "false()",
                    "flag": "fatal"
                },
                {
                    "id": "PEPPOL-EN16931-R008",
                    "text": "Document MUST not contain empty elements.",
                    "location": "/*:Invoice[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:Invoice-2'][1]/*:AccountingCustomerParty[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2'][1]/*:Party[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2'][1]/*:PostalAddress[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2'][1]/*:BuildingNumber[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2'][1]",
                    "test": "false()",
                    "flag": "fatal"
                },
                {
                    "id": "PEPPOL-EN16931-R008",
                    "text": "Document MUST not contain empty elements.",
                    "location": "/*:Invoice[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:Invoice-2'][1]/*:InvoiceLine[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2'][1]/*:Item[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2'][1]/*:SellersItemIdentification[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2'][1]/*:ID[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2'][1]",
                    "test": "false()",
                    "flag": "fatal"
                },
                {
                    "id": "PEPPOL-EN16931-R007",
                    "text": "Business process MUST be in the format 'urn:fdc:peppol.eu:2017:poacc:billing:NN:1.0' where NN indicates the process number.",
                    "location": "/*:Invoice[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:Invoice-2'][1]",
                    "test": "$profile != 'Unknown'",
                    "flag": "fatal"
                },
                {
                    "id": "PEPPOL-EN16931-R004-AUNZ",
                    "text": "Specification identifier MUST have the value 'urn:cen.eu:en16931:2017#conformant#urn:fdc:peppol.eu:2017:poacc:billing:international:aunz:3.0'.",
                    "location": "/*:Invoice[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:Invoice-2'][1]",
                    "test": "starts-with(normalize-space(cbc:CustomizationID/text()), 'urn:cen.eu:en16931:2017#conformant#urn:fdc:peppol.eu:2017:poacc:billing:international:aunz:3.0')",
                    "flag": "fatal"
                },
                {
                    "id": "PEPPOL-EN16931-R053",
                    "text": "Only one tax total with tax subtotals MUST be provided.",
                    "location": "/*:Invoice[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:Invoice-2'][1]",
                    "test": "count(cac:TaxTotal[cac:TaxSubtotal]) = 1",
                    "flag": "fatal"
                },
                {
                    "id": "PEPPOL-EN16931-R054",
                    "text": "Only one tax total without tax subtotals MUST be provided when tax currency code is provided.",
                    "location": "/*:Invoice[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:Invoice-2'][1]",
                    "test": "count(cac:TaxTotal[not(cac:TaxSubtotal)]) = (if (cbc:TaxCurrencyCode) then 1 else 0)",
                    "flag": "fatal"
                },
                {
                    "id": "PEPPOL-EN16931-R020",
                    "text": "Seller electronic address MUST be provided",
                    "location": "/*:Invoice[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:Invoice-2'][1]/*:AccountingSupplierParty[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2'][1]/*:Party[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2'][1]",
                    "test": "cbc:EndpointID",
                    "flag": "fatal"
                },
                {
                    "id": "PEPPOL-EN16931-R010",
                    "text": "Buyer electronic address MUST be provided",
                    "location": "/*:Invoice[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:Invoice-2'][1]/*:AccountingCustomerParty[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2'][1]/*:Party[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2'][1]",
                    "test": "cbc:EndpointID",
                    "flag": "fatal"
                },
                {
                    "id": "PEPPOL-EN16931-R120",
                    "text": "Invoice line net amount MUST equal (Invoiced quantity * (Item net price/item price base quantity) + Sum of invoice line charge amount - sum of invoice line allowance amount",
                    "location": "/*:Invoice[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:Invoice-2'][1]/*:InvoiceLine[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2'][1]",
                    "test": "u:slack($lineExtensionAmount, ($quantity * ($priceAmount div $baseQuantity)) + $chargesTotal - $allowancesTotal, 0.02)",
                    "flag": "fatal"
                },
                {
                    "id": "PEPPOL-EN16931-R130",
                    "text": "Unit code of price base quantity MUST be same as invoiced quantity.",
                    "location": "/*:Invoice[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:Invoice-2'][1]/*:InvoiceLine[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2'][1]/*:Price[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2'][1]/*:BaseQuantity[namespace-uri()='urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2'][1]",
                    "test": "not($hasQuantity) or @unitCode = $quantity/@unitCode",
                    "flag": "fatal"
                }
            ],
            "firedSuccessfulReports": [],
            "firedSuccessfulReportsCount": 0,
            "firedAssertionErrorsCount": 11,
            "firedAssertionErrorCodes": [
                "PEPPOL-EN16931-R008",
                "PEPPOL-EN16931-R008",
                "PEPPOL-EN16931-R008",
                "PEPPOL-EN16931-R007",
                "PEPPOL-EN16931-R004-AUNZ",
                "PEPPOL-EN16931-R053",
                "PEPPOL-EN16931-R054",
                "PEPPOL-EN16931-R020",
                "PEPPOL-EN16931-R010",
                "PEPPOL-EN16931-R120",
                "PEPPOL-EN16931-R130"
            ]
        }
    },
    "allAssertionErrorCodes": [
        "PEPPOL-EN16931-R008",
        "PEPPOL-EN16931-R008",
        "PEPPOL-EN16931-R008",
        "PEPPOL-EN16931-R007",
        "PEPPOL-EN16931-R004-AUNZ",
        "PEPPOL-EN16931-R053",
        "PEPPOL-EN16931-R054",
        "PEPPOL-EN16931-R020",
        "PEPPOL-EN16931-R010",
        "PEPPOL-EN16931-R120",
        "PEPPOL-EN16931-R130"
    ],
    "firedSuccessfulReportsCount": 0,
    "firedAssertionErrorsCount": 11
}